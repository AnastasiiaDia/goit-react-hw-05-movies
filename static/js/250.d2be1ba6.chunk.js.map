{"version":3,"file":"static/js/250.d2be1ba6.chunk.js","mappings":"yNACaA,E,QAAYC,EAAAA,IAAH,+C,SCiBtB,EAde,WACb,OACE,SAACD,EAAD,WACE,SAAC,KAAD,CACEE,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,KAIhB,C,8ICDD,EAbiB,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAC7B,OACE,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaH,GAArB,WACE,gBACEI,IAAG,yCAAoCF,GACvCG,IAAKJ,KAEP,wBAAKA,QANAD,EAUZ,E,SCZYM,E,QAAKZ,EAAAA,GAAH,sICUf,EATiB,SAAC,GAAgB,IAAda,EAAa,EAAbA,OAClB,OACE,SAACD,EAAD,UACGC,EAAOC,KAAI,gBAAGR,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACV,SAAC,EAAD,CAAmBD,MAAOA,EAAOC,YAAaA,EAAaF,GAAIA,GAAhDA,EADL,KAKjB,E,oBCqBD,MA3BA,WACE,OAA4BS,EAAAA,EAAAA,UAAS,MAArC,eAAOF,EAAP,KAAeG,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAI,mCAAG,gHAEiBC,EAAAA,EAAAA,MAFjB,gBAEDC,EAFC,EAEDA,QACRN,GAAW,GACXF,EAAUQ,GACVJ,GAAS,GALA,kDAOTK,QAAQC,IAAI,KAAMC,SAPT,0DAAH,qDAUVL,GACD,GAAE,KAGD,iCACE,wBAAI,oBACHH,IAAS,uBAAIA,EAAMQ,UACnBV,GAAU,SAAC,EAAD,CAAUJ,OAAQA,KAAa,SAACe,EAAA,QAAD,MAG/C,C,mMC7BKC,EAAW,+BAEjBC,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAFc,oCAKT,IAAMR,EAAS,mCAAG,sGACAO,EAAAA,EAAAA,IAAA,UAAaD,EAAb,sBADA,uBACfP,EADe,EACfA,KADe,kBAEhBA,GAFgB,2CAAH,qDAKTU,EAAc,mCAAG,WAAOC,GAAP,8FAAcC,EAAd,+BAAqB,EAArB,SACLJ,EAAAA,EAAAA,IAAA,UAClBD,EADkB,+BACaI,EADb,iBAC2BC,IAFtB,uBACpBZ,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOda,EAAe,mCAAG,WAAM7B,GAAN,yFACNwB,EAAAA,EAAAA,IAAA,UAAaD,EAAb,kBAA+BvB,IADzB,uBACrBgB,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfc,EAAmB,mCAAG,WAAM9B,GAAN,yFACVwB,EAAAA,EAAAA,IAAA,UAAaD,EAAb,kBAA+BvB,EAA/B,cADU,uBACzBgB,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,sDAKnBe,EAAU,mCAAG,WAAM/B,GAAN,yFACDwB,EAAAA,EAAAA,IAAA,UAAaD,EAAb,kBAA+BvB,EAA/B,cADC,uBAChBgB,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,qD","sources":["components/Loader.styled.jsx","components/Loader.jsx","components/HomeItem/HomeItem.jsx","components/HomeList/HomeList.styled.jsx","components/HomeList/HomeList.jsx","components/pages/Home.js","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nexport const LoaderDiv = styled.div`\n  text-align: center;\n`;\n","import React from 'react';\nimport { RotatingLines } from 'react-loader-spinner';\nimport { LoaderDiv } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <LoaderDiv>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </LoaderDiv>\n  );\n};\n\nexport default Loader;\n","import { Link } from 'react-router-dom';\n\nconst HomeItem = ({ id, title, poster_path }) => {\n  return (\n    <li key={id}>\n      <Link to={`/movies/${id}`}>\n        <img\n          src={`https://image.tmdb.org/t/p/w200${poster_path}`}\n          alt={title}\n        />\n        <h3>{title}</h3>\n      </Link>\n    </li>\n  );\n};\nexport default HomeItem;\n","import styled from '@emotion/styled';\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-direction: row;\n  gap: 10px;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import HomeItem from 'components/HomeItem/HomeItem';\nimport { Ul } from './HomeList.styled';\n\nconst HomeList = ({ movies }) => {\n  return (\n    <Ul>\n      {movies.map(({ id, title, poster_path }) => (\n        <HomeItem key={id} title={title} poster_path={poster_path} id={id} />\n      ))}\n    </Ul>\n  );\n};\nexport default HomeList;\n","import { getMovies } from 'services/api';\nimport HomeList from 'components/HomeList/HomeList';\nimport React, { useState, useEffect } from 'react';\nimport Loader from 'components/Loader';\n\nfunction Home() {\n  const [movies, setMovies] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const data = async () => {\n      try {\n        const { results } = await getMovies();\n        setLoading(true);\n        setMovies(results);\n        setError(false);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    data();\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today:</h1>\n      {error && <p>{error.message}</p>}\n      {loading ? <HomeList movies={movies} /> : <Loader />}\n    </>\n  );\n}\nexport default Home;\n\n// fetch('https://api.themoviedb.org/3/trending/all/day?language=en-US', {\n//   method: 'GET',\n//   headers: {\n//     accept: 'application/json',\n//     Authorization:\n//       'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwYWUxNDI0ZTk3ZDY2Nzg3YmY4OThjYjQ3MTk2MTE5MCIsInN1YiI6IjY1MWZlZDZlZWE4NGM3MDE0ZWZmMzZjYSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.jpSyJk-iw5zq111EFHic5OJ_V_xPlsos-S45_2T5b6M',\n//   },\n// })\n//   .then(response => response.json())\n//   .then(data => {\n//     setFilms(data.results);\n//   });\n\n// {\n/* <ul>\n        {movies &&\n          movies.map(movie => {\n            console.log(movie);\n            const title = movie.title ?? movie.name;\n\n            return (\n              <li>\n                <a href={movie.id}>{title}</a>\n              </li>\n            );\n          })}\n      </ul> */\n// }\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '0ae1424e97d66787bf898cb471961190';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getMovies = async () => {\n  const { data } = await axios.get(`${BASE_URL}/trending/all/day`);\n  return data;\n};\n\nexport const getSearchMovie = async (query, page = 1) => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?query=${query}&page=${page}`\n  );\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${id}`);\n  return data;\n};\n\nexport const getCreditsCastMovie = async id => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${id}/credits?`);\n  return data;\n};\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${id}/reviews?`);\n  return data;\n};\n"],"names":["LoaderDiv","styled","strokeColor","strokeWidth","animationDuration","width","visible","id","title","poster_path","to","src","alt","Ul","movies","map","useState","setMovies","loading","setLoading","error","setError","useEffect","data","getMovies","results","console","log","message","Loader","BASE_URL","axios","api_key","getSearchMovie","query","page","getMovieDetails","getCreditsCastMovie","getReviews"],"sourceRoot":""}