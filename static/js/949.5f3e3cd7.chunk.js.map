{"version":3,"file":"static/js/949.5f3e3cd7.chunk.js","mappings":"kMAEaA,EAAYC,EAAAA,EAAAA,IAAH,4CAICA,EAAAA,EAAAA,QAAH,2C,2ICKpB,EATmB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC5B,OACE,2BACE,yBAAG,WAASD,MACZ,yBAAG,YAAUC,OAGlB,ECWD,EAhBoB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,OACE,SAAC,IAAD,WACE,wBACGA,EAAQC,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIJ,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,yBACE,SAAC,EAAD,CAAqBD,OAAQA,EAAQC,QAASA,GAA7BG,IADVA,EAIZ,OAIR,E,oBCuBD,EApCgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOH,EAAP,KAAgBI,EAAhB,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAdAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,WAAMR,GAAN,mGAEYS,EAAAA,EAAAA,IAAWT,GAFvB,gBAENU,EAFM,EAENA,QACRR,EAAWQ,GAHG,gDAKdC,QAAQC,IAAI,KAAMC,SAClBT,GAAW,GANG,yBAQdA,GAAW,GARG,4EAAH,sDAWfI,EAAUH,EACX,GAAE,CAACA,KAEF,8BACGF,IACC,8BACE,yBACsB,IAAnBL,EAAQgB,QACP,wBAAI,gBAEJ,SAAC,EAAD,CAAahB,QAASA,SAOnC,C,mMCrCKiB,EAAW,+BAEjBC,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAFc,oCAKT,IAAMC,EAAS,mCAAG,sGACAF,EAAAA,EAAAA,IAAA,UAAaD,EAAb,sBADA,uBACfI,EADe,EACfA,KADe,kBAEhBA,GAFgB,2CAAH,qDAKTC,EAAc,mCAAG,WAAOC,GAAP,8FAAcC,EAAd,+BAAqB,EAArB,SACLN,EAAAA,EAAAA,IAAA,UAClBD,EADkB,+BACaM,EADb,iBAC2BC,IAFtB,uBACpBH,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOdI,EAAe,mCAAG,WAAMvB,GAAN,yFACNgB,EAAAA,EAAAA,IAAA,UAAaD,EAAb,kBAA+Bf,IADzB,uBACrBmB,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfK,EAAmB,mCAAG,WAAMxB,GAAN,yFACVgB,EAAAA,EAAAA,IAAA,UAAaD,EAAb,kBAA+Bf,EAA/B,cADU,uBACzBmB,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,sDAKnBV,EAAU,mCAAG,WAAMT,GAAN,yFACDgB,EAAAA,EAAAA,IAAA,UAAaD,EAAb,kBAA+Bf,EAA/B,cADC,uBAChBmB,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,qD","sources":["components/App.styled.jsx","components/ReviewItem/ReeviewItem.jsx","components/ReviewsList/ReviewsList.jsx","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 0 18px;\n`;\n\nexport const Section = styled.section`\n  padding: 50px 0;\n`;\n","import React from 'react';\n\nconst ReviewItem = ({ author, content }) => {\n  return (\n    <li>\n      <p>Author: {author}</p>\n      <p>Content: {content}</p>\n    </li>\n  );\n};\n\nexport default ReviewItem;\n","import { Container } from 'components/App.styled';\nimport ReviewItem from 'components/ReviewItem/ReeviewItem';\nimport React from 'react';\n\nconst ReviewsList = ({ reviews }) => {\n  return (\n    <Container>\n      <ul>\n        {reviews.map(({ id, author, content }) => {\n          return (\n            <li key={id}>\n              <ReviewItem key={id} author={author} content={content} />\n            </li>\n          );\n        })}\n      </ul>\n    </Container>\n  );\n};\n\nexport default ReviewsList;\n","import ReviewsList from 'components/ReviewsList/ReviewsList';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'services/api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchData = async id => {\n      try {\n        const { results } = await getReviews(id);\n        setReviews(results);\n      } catch (error) {\n        console.log(error.message);\n        setLoading(false);\n      } finally {\n        setLoading(true);\n      }\n    };\n    fetchData(movieId);\n  }, [movieId]);\n  return (\n    <>\n      {loading && (\n        <section>\n          <div>\n            {reviews.length === 0 ? (\n              <h3>No reviews</h3>\n            ) : (\n              <ReviewsList reviews={reviews} />\n            )}\n          </div>\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '0ae1424e97d66787bf898cb471961190';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getMovies = async () => {\n  const { data } = await axios.get(`${BASE_URL}/trending/all/day`);\n  return data;\n};\n\nexport const getSearchMovie = async (query, page = 1) => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?query=${query}&page=${page}`\n  );\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${id}`);\n  return data;\n};\n\nexport const getCreditsCastMovie = async id => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${id}/credits?`);\n  return data;\n};\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${id}/reviews?`);\n  return data;\n};\n"],"names":["Container","styled","author","content","reviews","map","id","useState","setReviews","loading","setLoading","movieId","useParams","useEffect","fetchData","getReviews","results","console","log","message","length","BASE_URL","axios","api_key","getMovies","data","getSearchMovie","query","page","getMovieDetails","getCreditsCastMovie"],"sourceRoot":""}