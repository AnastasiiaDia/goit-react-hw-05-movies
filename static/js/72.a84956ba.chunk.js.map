{"version":3,"file":"static/js/72.a84956ba.chunk.js","mappings":"wNACaA,E,QAAYC,EAAAA,IAAH,+C,SCiBtB,EAde,WACb,OACE,SAACD,EAAD,WACE,SAAC,KAAD,CACEE,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,KAIhB,C,wJCdYC,EAAiBN,EAAAA,EAAAA,GAAH,0Y,SCc3B,EAbiB,SAAC,GAAgC,IAA9BO,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAC7B,OACE,SAACH,EAAD,WACE,UAAC,KAAD,CAAMI,GAAE,kBAAaH,GAArB,WACE,gBACEI,IAAG,yCAAoCF,GACvCG,IAAKJ,KAEP,eAAIK,UAAU,SAAd,SAAwBL,QAI/B,ECbYM,EAAKd,EAAAA,EAAAA,GAAH,+KCef,EAdiB,SAAC,GAAgB,IAAde,EAAa,EAAbA,OAClB,OACE,SAACD,EAAD,UACGC,EAAOC,KAAI,gBAAGT,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAaQ,EAA3B,EAA2BA,KAA3B,OACV,SAAC,EAAD,CAEET,MAAK,OAAES,QAAF,IAAEA,EAAAA,EAAQT,EACfC,YAAaA,EACbF,GAAIA,GAHCA,EAFG,KAUjB,E,oBCgBD,MA3BA,WACE,OAA4BW,EAAAA,EAAAA,UAAS,MAArC,eAAOH,EAAP,KAAeI,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAI,mCAAG,gHAEiBC,EAAAA,EAAAA,MAFjB,gBAEDC,EAFC,EAEDA,QACRN,GAAW,GACXF,EAAUQ,GACVJ,GAAS,GALA,kDAOTK,QAAQC,IAAI,KAAMC,SAPT,0DAAH,qDAUVL,GACD,GAAE,KAGD,iCACE,eAAIZ,UAAU,SAAd,SAAuB,oBACtBS,IAAS,uBAAIA,EAAMQ,UACnBV,GAAU,SAAC,EAAD,CAAUL,OAAQA,KAAa,SAACgB,EAAA,QAAD,MAG/C,C,mMC7BKC,EAAW,+BAEjBC,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAFc,oCAKT,IAAMR,EAAS,mCAAG,sGACAO,EAAAA,EAAAA,IAAA,UAAaD,EAAb,sBADA,uBACfP,EADe,EACfA,KADe,kBAEhBA,GAFgB,2CAAH,qDAKTU,EAAc,mCAAG,WAAOC,GAAP,8FAAcC,EAAd,+BAAqB,EAArB,SACLJ,EAAAA,EAAAA,IAAA,UAClBD,EADkB,+BACaI,EADb,iBAC2BC,IAFtB,uBACpBZ,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOda,EAAe,mCAAG,WAAM/B,GAAN,yFACN0B,EAAAA,EAAAA,IAAA,UAAaD,EAAb,kBAA+BzB,IADzB,uBACrBkB,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfc,EAAmB,mCAAG,WAAMhC,GAAN,yFACV0B,EAAAA,EAAAA,IAAA,UAAaD,EAAb,kBAA+BzB,EAA/B,cADU,uBACzBkB,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,sDAKnBe,EAAU,mCAAG,WAAMjC,GAAN,yFACD0B,EAAAA,EAAAA,IAAA,UAAaD,EAAb,kBAA+BzB,EAA/B,cADC,uBAChBkB,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,qD","sources":["components/Loader.styled.jsx","components/Loader.jsx","components/HomeItem/HomeItem.styled.jsx","components/HomeItem/HomeItem.jsx","components/HomeList/HomeList.styled.jsx","components/HomeList/HomeList.jsx","components/pages/Home.js","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nexport const LoaderDiv = styled.div`\n  text-align: center;\n`;\n","import React from 'react';\nimport { RotatingLines } from 'react-loader-spinner';\nimport { LoaderDiv } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <LoaderDiv>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </LoaderDiv>\n  );\n};\n\nexport default Loader;\n","import styled from '@emotion/styled';\n\nexport const HomeItemStyled = styled.li`\n  display: block;\n  width: 200px;\n  text-align: center;\n  transition: 0.2s;\n\n  .titles {\n    text-decoration: none;\n  }\n  &:hover,\n  focus {\n    scale: 1.01;\n    box-shadow: 15px 12px 15px -3px rgba(255, 255, 0, 0.7);\n    -webkit-box-shadow: 15px 12px 15px -3px rgba(255, 255, 0, 0.7);\n    -moz-box-shadow: 15px 12px 15px -3px rgba(255, 255, 0, 0.7);\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport { HomeItemStyled } from './HomeItem.styled';\n\nconst HomeItem = ({ id, title, poster_path }) => {\n  return (\n    <HomeItemStyled>\n      <Link to={`/movies/${id}`}>\n        <img\n          src={`https://image.tmdb.org/t/p/w200${poster_path}`}\n          alt={title}\n        />\n        <h3 className=\"titles\">{title}</h3>\n      </Link>\n    </HomeItemStyled>\n  );\n};\nexport default HomeItem;\n","import styled from '@emotion/styled';\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-direction: row;\n  gap: 12px;\n  flex-wrap: wrap;\n  justify-content: space-around;\n\n  margin: 0 auto;\n  padding: 0 18px;\n`;\n","import HomeItem from 'components/HomeItem/HomeItem';\nimport { Ul } from './HomeList.styled';\n\nconst HomeList = ({ movies }) => {\n  return (\n    <Ul>\n      {movies.map(({ id, title, poster_path, name }) => (\n        <HomeItem\n          key={id}\n          title={name ?? title}\n          poster_path={poster_path}\n          id={id}\n        />\n      ))}\n    </Ul>\n  );\n};\nexport default HomeList;\n","import { getMovies } from 'services/api';\nimport HomeList from 'components/HomeList/HomeList';\nimport React, { useState, useEffect } from 'react';\nimport Loader from 'components/Loader';\n\nfunction Home() {\n  const [movies, setMovies] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const data = async () => {\n      try {\n        const { results } = await getMovies();\n        setLoading(true);\n        setMovies(results);\n        setError(false);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    data();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"titles\">Trending today:</h1>\n      {error && <p>{error.message}</p>}\n      {loading ? <HomeList movies={movies} /> : <Loader />}\n    </>\n  );\n}\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '0ae1424e97d66787bf898cb471961190';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getMovies = async () => {\n  const { data } = await axios.get(`${BASE_URL}/trending/all/day`);\n  return data;\n};\n\nexport const getSearchMovie = async (query, page = 1) => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?query=${query}&page=${page}`\n  );\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${id}`);\n  return data;\n};\n\nexport const getCreditsCastMovie = async id => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${id}/credits?`);\n  return data;\n};\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${id}/reviews?`);\n  return data;\n};\n"],"names":["LoaderDiv","styled","strokeColor","strokeWidth","animationDuration","width","visible","HomeItemStyled","id","title","poster_path","to","src","alt","className","Ul","movies","map","name","useState","setMovies","loading","setLoading","error","setError","useEffect","data","getMovies","results","console","log","message","Loader","BASE_URL","axios","api_key","getSearchMovie","query","page","getMovieDetails","getCreditsCastMovie","getReviews"],"sourceRoot":""}