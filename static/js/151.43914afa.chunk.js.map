{"version":3,"file":"static/js/151.43914afa.chunk.js","mappings":"sQAiBA,EAfiB,SAAC,GAAuC,IAArCA,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UAEtC,OACE,2BACGF,GACC,gBAAKG,IAAG,UAJG,mCAIH,OAAgBH,GAAgBI,IAAKF,KAE7C,gBAAKC,IAAI,kCAAkCC,IAAKF,KAElD,wBAAKD,KACL,uBAAIC,MAGT,ECYD,EAxBiB,SAAC,GAAc,IAAZG,EAAW,EAAXA,KACZC,EAAM,IAAIC,IAChB,OACE,wBACGF,GACCA,EAAKG,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIR,EAAoC,EAApCA,KAAMD,EAA8B,EAA9BA,aAAcE,EAAgB,EAAhBA,UAClC,OAAKI,EAAII,IAAID,GAWJ,MAVPH,EAAIK,IAAIF,IAEN,SAAC,EAAD,CAEER,KAAMA,EACND,aAAcA,EACdE,UAAWA,GAHNO,GASZ,KAGR,ECWD,EA/Ba,WACX,OAAwBG,EAAAA,EAAAA,UAAS,IAAjC,eAAOP,EAAP,KAAaQ,EAAb,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,WAAS,GAAnC,eAAOI,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,WAAMZ,GAAN,mGAESa,EAAAA,EAAAA,IAAoBb,GAF7B,gBAENJ,EAFM,EAENA,KACRQ,EAAQR,GAHM,gDAKdkB,QAAQC,IAAI,KAAMC,SAClBR,GAAS,GACTF,GAAW,GAPG,yBASdA,GAAW,GATG,4EAAH,sDAYfM,EAAUH,EACX,GAAE,CAACA,KAEF,8BACE,2BACGJ,IAAW,SAAC,EAAD,CAAUT,KAAMA,IAC3BW,IAAS,wBAAI,cAIrB,C,mMChCKU,EAAW,+BAEjBC,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAFc,oCAKT,IAAMC,EAAS,mCAAG,sGACAF,EAAAA,EAAAA,IAAA,UAAaD,EAAb,sBADA,uBACfI,EADe,EACfA,KADe,kBAEhBA,GAFgB,2CAAH,qDAKTC,EAAc,mCAAG,WAAOC,GAAP,8FAAcC,EAAd,+BAAqB,EAArB,SACLN,EAAAA,EAAAA,IAAA,UAClBD,EADkB,+BACaM,EADb,iBAC2BC,IAFtB,uBACpBH,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOdI,EAAe,mCAAG,WAAMzB,GAAN,yFACNkB,EAAAA,EAAAA,IAAA,UAAaD,EAAb,kBAA+BjB,IADzB,uBACrBqB,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfR,EAAmB,mCAAG,WAAMb,GAAN,yFACVkB,EAAAA,EAAAA,IAAA,UAAaD,EAAb,kBAA+BjB,EAA/B,cADU,uBACzBqB,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,sDAKnBK,EAAU,mCAAG,WAAM1B,GAAN,yFACDkB,EAAAA,EAAAA,IAAA,UAAaD,EAAb,kBAA+BjB,EAA/B,cADC,uBAChBqB,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,qD","sources":["components/Cast/CastItem/CastItem.jsx","components/Cast/CastList/CastList.jsx","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import React from 'react';\n\nconst CastItem = ({ profile_path, name, character }) => {\n  const BASE_IMG = 'https://image.tmdb.org/t/p/w200';\n  return (\n    <div>\n      {profile_path ? (\n        <img src={`${BASE_IMG}${profile_path}`} alt={character} />\n      ) : (\n        <img src=\"https://via.placeholder.com/150\" alt={character} />\n      )}\n      <h2>{name}</h2>\n      <p>{character}</p>\n    </div>\n  );\n};\n\nexport default CastItem;\n","import React from 'react';\nimport CastItem from '../CastItem/CastItem';\n\nconst CastList = ({ cast }) => {\n  const set = new Set();\n  return (\n    <ul>\n      {cast &&\n        cast.map(({ id, name, profile_path, character }) => {\n          if (!set.has(id)) {\n            set.add(id);\n            return (\n              <CastItem\n                key={id}\n                name={name}\n                profile_path={profile_path}\n                character={character}\n              />\n            );\n          } else {\n            return null;\n          }\n        })}\n    </ul>\n  );\n};\n\nexport default CastList;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCreditsCastMovie } from 'services/api';\nimport CastList from './CastList/CastList';\n\nconst Cast = () => {\n  const [cast, setCast] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchData = async id => {\n      try {\n        const { cast } = await getCreditsCastMovie(id);\n        setCast(cast);\n      } catch (error) {\n        console.log(error.message);\n        setError(true);\n        setLoading(false);\n      } finally {\n        setLoading(true);\n      }\n    };\n    fetchData(movieId);\n  }, [movieId]);\n  return (\n    <section>\n      <div>\n        {loading && <CastList cast={cast} />}\n        {error && <h1>Error</h1>}\n      </div>\n    </section>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '0ae1424e97d66787bf898cb471961190';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getMovies = async () => {\n  const { data } = await axios.get(`${BASE_URL}/trending/all/day`);\n  return data;\n};\n\nexport const getSearchMovie = async (query, page = 1) => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?query=${query}&page=${page}`\n  );\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${id}`);\n  return data;\n};\n\nexport const getCreditsCastMovie = async id => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${id}/credits?`);\n  return data;\n};\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${id}/reviews?`);\n  return data;\n};\n"],"names":["profile_path","name","character","src","alt","cast","set","Set","map","id","has","add","useState","setCast","loading","setLoading","error","setError","movieId","useParams","useEffect","fetchData","getCreditsCastMovie","console","log","message","BASE_URL","axios","api_key","getMovies","data","getSearchMovie","query","page","getMovieDetails","getReviews"],"sourceRoot":""}